# Workflow to handle packaging the Unity SDK
name: Package SDKs

on:
  workflow_dispatch:
    inputs:
      operating_systems:
        description: 'CSV of VMs to run on'
        default: 'ubuntu-latest'
        required: true

jobs:
  package_sdks:
    name: package-${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        include:
        - os: ubuntu-latest
          package_dir: output
    steps:
      - name: fetch SDK
        uses: actions/checkout@v2.3.1

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install python deps
        shell: bash
        run: |
          pip install -r scripts/gha/requirements.txt

      # Fetch all the zip files from previous run
      # - name: Fetch Desktop Artifacts
      #   uses: dawidd6/action-download-artifact@v2
      #   with:
      #     workflow: 'sdk_build.yml'
      #     run_id: ${{ github.event.inputs.downloadPreviousRun }}
      #     path: built_artifect

      - name: Fetch iOS Artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: 'ios.yml'
          run_id: ${{ github.event.inputs.downloadPreviousRun }}
          path: built_artifect
      
      # - name: Fetch Android Artifacts
      #   uses: dawidd6/action-download-artifact@v2
      #   with:
      #     workflow: 'android.yml'
      #     run_id: ${{ github.event.inputs.downloadPreviousRun }}
      #     path: built_artifect

      - name: move zip files
        run: |
          cd built_artifect
          find . -type f -name "*.zip" -exec mv {} . \;
          ls -l
          cd ..

      - name: Package unitypackage
        run: |
          python build_package.py --zip_dir=built_artifect

      - name: Listing output
        run: |
          ls -Rl
        working-directory: output

      - name: Upload Build unitypackage
        uses: actions/upload-artifact@v2
        with:
          name: firebase_unity_sdk
          path: output
      
      # - name: Package tgz
      #   run: |
      #     python build_package.py --zip_dir=built_artifect --output_upm=True --output=output_tgz

      # - name: Listing output tgz
      #   run: |
      #     ls -Rl
      #   working-directory: output_tgz

      # - name: Upload Build tgz
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: firebase_unity_sdk_tgz
      #     path: output_tgz
        
    